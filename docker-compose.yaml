version: "3.9"

services:
  xchains-db:
    restart: "unless-stopped"
    image: postgres:15-alpine
    container_name: scalar-xchains-db
    stop_grace_period: 1m
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5452:5432/tcp
    healthcheck:
      test: ["CMD", "nc", "-z", "-v", "localhost", "5432"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      default:
        aliases:
          - xchains-indexer

  xchains-indexer:
    restart: "no"
    build:
      dockerfile: Dockerfile
      args:
        - TARGETPLATFORM=${TARGETPLATFORM}
    image: "scalarorg/xchains-indexer"  
    container_name: scalar-xchains-indexer  
    user: xchains-indexer
    stop_grace_period: 10s
    networks:
      default:
        aliases:
          - xchains-indexer
    extra_hosts:
      - "host.docker.internal:host-gateway"      
    environment:
      - EXTENDED_ARGS=""
      - LOG_LEVEL="info"
      - ACCOUNT_PREFIX="scalar"
      - RPC_URL="http://host.docker.internal:26657"
    command:
    - /bin/sh
    - -c
    - |
      cosmos-indexer index \
      --log.pretty=${PRETTY_LOG} \
      --log.level=${LOG_LEVEL} \
      --base.index-transactions=${INDEX_TRANSACTIONS} \
      --base.index-block-events=${INDEX_BLOCK_EVENTS} \
      --base.start-block=${START_BLOCK} \
      --base.end-block=${END_BLOCK} \
      --base.throttling=${THROTTLING} \
      --base.rpc-workers=${RPC_WORKERS} \
      --base.reindex=${REINDEX} \
      --base.reattempt-failed-blocks=false \
      --probe.rpc=${RPC_URL} \
      --probe.account-prefix=${ACCOUNT_PREFIX} \
      --probe.chain-id=${CHAIN_ID} \
      --probe.chain-name=${CHAIN_NAME} \
      --database.host=${POSTGRES_HOST} \
      --database.database=${POSTGRES_DB} \
      --database.user=${POSTGRES_USER} \
      --database.password=${POSTGRES_PASSWORD} \
      ${EXTENDED_ARGS}

volumes:
  postgres:
